name: Build and Release Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Semantic version tag for the release (e.g., v1.0.0)"
        required: true

permissions:
  contents: write
  packages: write 

jobs:
  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Validate tag uniqueness
      - name: Validate Tag Uniqueness
        id: validate_tag
        run: |
          if git rev-parse "refs/tags/${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Error: Tag ${{ github.event.inputs.version }} already exists"
            exit 1
          fi

      # Set up Docker Buildx for multi-platform builds (optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push the Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.event.inputs.version }}
            ghcr.io/${{ github.repository }}:latest

      # Optional: Create a GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}
          body: |
            This is an automated release for version ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
